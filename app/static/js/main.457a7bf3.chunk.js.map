{"version":3,"sources":["utils.js","queries/useSlotsByDistrict.js","queries/useFilteredSlots.js","components/tile.js","components/container.js","queries/useDistricts.js","queries/useStates.js","components/filters.js","App.js","reportWebVitals.js","index.js"],"names":["formatDate","date","frmt","format","getSlotByDistrictAPI","district_id","a","fetch","headers","response","json","filterByAge","center","age","sessions","filter","session","min_age_limit","length","ABOVE_AGE_18","ABOVE_AGE_45","AVAILABLITY","filterMap","data","available_capacity","filters","dateString","useStyles","makeStyles","theme","console","log","height","width","overflow","centerName","backgroundColor","palette","secondary","light","lineHeight","borderRadius","whiteSpace","textOverflow","padding","badge","slotContainer","SlotList","List","slots","map","slot","idx","ListItem","button","SessionList","Boolean","name","Typography","align","AvailablilityTag","onClick","reduce","list","findIndex","tag","push","Grid","item","Badge","badgeContent","color","Chip","label","e","Tile","useState","anchorEle","setAnchorEle","selectedCenter","setSelectedCenter","selectedAge","setSelectedAge","styles","ele","setEle","Paper","className","elevation","onMouseEnter","onMouseLeave","Tooltip","title","container","justify","spacing","currentTarget","Popover","id","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","root","flexGrow","day","CenterList","NoCenter","Container","getDistrictAPI","state","getStatesAPI","filterContainer","filterRow","FilterButton","props","classes","active","setActive","Button","size","style","margin","variant","Filters","setFilters","useQuery","staleTime","Infinity","isLoading","isError","status","states","useStates","isLoadingStates","enabled","districts","useDistricts","state_id","isLoadingDistricts","onFilterClick","filter_type","categories","indexOf","splice","xs","TextField","type","value","InputLabelProps","shrink","onChange","target","valueAsDate","Autocomplete","disabled","options","getOptionLabel","option","state_name","getOptionSelected","renderInput","params","newValue","district_name","district","createMuiTheme","primary","main","dark","contrastText","app","display","flexDirection","flexWrap","justifyContent","initialFilters","Date","App","refetchInterval","centers","useSlotsByDistrict","filteredData","filterFunctions","filterFun","filterCenters","category","useFilters","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.457a7bf3.chunk.js","sourcesContent":["import format from \"date-fns/format\";\n\nexport const formatDate = (date, frmt) => format(date, frmt);\n","import { useQuery, useQueryClient } from \"react-query\";\nimport { formatDate } from \"../utils\";\n\nconst slotByDistrictURL =\n  \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict\";\nconst getSlotByDistrictAPI = async (district_id, date) => {\n  const response = await fetch(\n    `${slotByDistrictURL}?district_id=${district_id}&date=${date}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  return response.json();\n};\n\nexport const useSlotsByDistrict = (district_id, date) => {\n  const dateString = formatDate(date, \"dd-MM-yyyy\");\n  const { data, isLoading, isError, status } = useQuery(\n    `slotsByDistrict-${district_id}-${dateString}`,\n    () => getSlotByDistrictAPI(district_id, dateString),\n    {\n      refetchInterval: 60000,\n      enabled: !!district_id && !!date,\n    }\n  );\n  const centers = data?.centers;\n\n  return {\n    data: centers,\n    isLoading,\n    isError,\n    status,\n  };\n};\n","import { formatDate } from \"./../utils\";\n\nconst filterCenters = (centers, filters, filterFunctions) => {\n  if (centers?.length > 0) {\n    return centers.filter((center) => {\n      const filterResults = filterFunctions.map((filterFun) =>\n        filterFun(center, filters)\n      );\n      return filterResults.indexOf(false) === -1;\n    });\n  }\n};\nconst filterByAge = (center, age) => {\n  return (\n    center?.sessions.filter((session) => session.min_age_limit <= age)?.length >\n    0\n  );\n};\nconst filterByAvailability = (center) => {\n  return (\n    center?.sessions.filter((session) => session?.available_capacity > 0)\n      .length > 0\n  );\n};\n\nconst filterByDate = (center, filters) => {\n  const dateString = formatDate(filters.date, \"dd-MM-yyyy\");\n  return (\n    center?.sessions.filter((session) => session.date === dateString).length > 0\n  );\n};\n\nexport const ABOVE_AGE_18 = \"ABOVE_AGE_18\";\nexport const ABOVE_AGE_45 = \"ABOVE_AGE_45\";\nexport const AVAILABLITY = \"AVAILABLITY\";\nexport const DATE = \"DATE\";\n\nconst filterMap = {\n  [ABOVE_AGE_18]: (data) => filterByAge(data, 18),\n  [ABOVE_AGE_45]: (data) => filterByAge(data, 45),\n  [AVAILABLITY]: filterByAvailability,\n  [DATE]: filterByDate,\n};\n\nexport const useFilters = (data, filters) => {\n  const { categories } = filters;\n  const filterFunctions = categories.map((category) => {\n    return filterMap[category];\n  });\n  return filterCenters(data, filters, filterFunctions);\n};\n","import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/tooltip\";\nimport Badge from \"@material-ui/core/badge\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { useFilters } from \"../queries/useFilteredSlots\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  console.log(\"theme\", theme);\n  return {\n    center: {\n      height: 80,\n      width: 140,\n      overflow: \"auto\",\n    },\n    centerName: {\n      backgroundColor: theme.palette.secondary.light,\n      lineHeight: \"1.5em\",\n      borderRadius: \"4px\",\n      width: \"100%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      padding: \"2px\",\n    },\n    badge: {\n      padding: \"8px\",\n    },\n    slotContainer: {\n      padding: \"4px\",\n    },\n  };\n});\n\nconst SlotList = ({ session }) => {\n  return (\n    <List>\n      {session?.slots.map((slot, idx) => (\n        <ListItem key={idx} button>\n          {slot}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst SessionList = ({ center, age }) => {\n  return (\n    <List>\n      {center?.sessions\n        .filter((session) => session.min_age_limit === age)\n        .map((session, idx) =>\n          Boolean(session.available_capacity) ? (\n            <ListItem key={`${center.name}-${idx}`} button>\n              {`Session ${idx + 1} - `}\n              <SlotList session={session} />\n            </ListItem>\n          ) : (\n            <Typography align=\"center\">No sessions to show</Typography>\n          )\n        )}\n    </List>\n  );\n};\n\nconst AvailablilityTag = ({ center, onClick }) => {\n  const availabilityByAge = center.sessions.reduce((list, session) => {\n    const idx = list.findIndex(\n      (tag) => tag.min_age_limit === session.min_age_limit\n    );\n    if (idx === -1) {\n      list.push({\n        min_age_limit: session.min_age_limit,\n        available_capacity: session.available_capacity,\n      });\n    } else {\n      list[idx].available_capacity += session.available_capacity;\n    }\n    return list;\n  }, []);\n  return availabilityByAge.map((age) => (\n    <Grid item>\n      <Badge badgeContent={age.available_capacity || \"0\"} color=\"primary\">\n        <Chip\n          label={`> ${age.min_age_limit}`}\n          color=\"default\"\n          onClick={(e) => onClick(e, center, age.min_age_limit)}\n        />\n      </Badge>\n    </Grid>\n  ));\n};\n\nconst Tile = ({ center }) => {\n  const [anchorEle, setAnchorEle] = useState(false);\n  const [selectedCenter, setSelectedCenter] = useState();\n  const [selectedSlot, setSelectedSlot] = useState();\n  const [selectedAge, setSelectedAge] = useState();\n  const styles = useStyles();\n  const [ele, setEle] = useState(1);\n\n  return (\n    <Paper\n      className={styles.center}\n      elevation={ele}\n      onMouseEnter={() => setEle(4)}\n      onMouseLeave={() => setEle(1)}\n    >\n      <Tooltip title={center.name}>\n        <div className={styles.centerName}>{center.name}</div>\n      </Tooltip>\n      <Grid container justify=\"center\" className={styles.badge} spacing={2}>\n        <AvailablilityTag\n          center={center}\n          onClick={(e, center, age) => {\n            setSelectedCenter(center);\n            setSelectedAge(age);\n            Boolean(anchorEle)\n              ? setAnchorEle(null)\n              : setAnchorEle(e.currentTarget);\n          }}\n        />\n        <Popover\n          id=\"mouse-over-popover\"\n          open={Boolean(anchorEle)}\n          anchorEl={anchorEle}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={() => setAnchorEle(null)}\n          disableRestoreFocus\n        >\n          <Grid container justify=\"center\" className={styles.slotContainer}>\n            <SessionList center={selectedCenter} age={selectedAge} />\n          </Grid>\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Tile;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/typography\";\nimport Tile from \"./tile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 16,\n  },\n  day: {\n    height: 80,\n    width: 140,\n  },\n}));\n\nconst CenterList = ({ data }) =>\n  data?.map((center, idx) => (\n    <Grid key={idx} item spacing={2}>\n      <Tile center={center} />\n    </Grid>\n  ));\n\nconst NoCenter = () => (\n  <Typography align=\"center\">No Centers to show</Typography>\n);\n\nconst Container = ({ data }) => {\n  const styles = useStyles();\n  return (\n    <Paper className={styles.root} elevation={2}>\n      <Grid container spacing={6} justify=\"center\">\n        {data?.length ? <CenterList data={data} /> : <NoCenter />}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Container;\n","import { useQuery } from \"react-query\";\n\nconst districtURL = \"https://cdn-api.co-vin.in/api/v2/admin/location/districts\";\nconst getDistrictAPI = async (state) => {\n  const response = await fetch(`${districtURL}/${state}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return response.json();\n};\n\nexport const useDistricts = (state) => {\n  console.log(\"useDistricts\", state);\n  const { data, isLoading, isError, status } = useQuery(\n    `districts-${state}`,\n    () => getDistrictAPI(state),\n    {\n      staleTime: Infinity,\n      enabled: !!state,\n    }\n  );\n  const districts = data?.districts || [];\n\n  return {\n    data: districts,\n    isLoading,\n    isError,\n    status,\n  };\n};\n","import { useQuery } from \"react-query\";\n\nconst stateURL = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\nconst getStatesAPI = async () => {\n  const response = await fetch(`${stateURL}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return response.json();\n};\n\nexport const useStates = () => {\n  const { data, isLoading, isError, status } = useQuery(\n    \"states\",\n    () => getStatesAPI(),\n    {\n      staleTime: Infinity,\n    }\n  );\n  const states = data?.states || [];\n\n  return {\n    data: states,\n    isLoading,\n    isError,\n    status,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport {\n  ABOVE_AGE_18,\n  ABOVE_AGE_45,\n  AVAILABLITY,\n} from \"../queries/useFilteredSlots\";\nimport { useDistricts } from \"../queries/useDistricts\";\nimport { useStates } from \"../queries/useStates\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/autocomplete\";\nimport { formatDate } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  filterContainer: {\n    padding: \"8px 0 8px 0\",\n  },\n  filterRow: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst FilterButton = ({ label, onClick, classes, className, ...props }) => {\n  const [active, setActive] = useState(false);\n  return (\n    <Button\n      {...props}\n      size=\"small\"\n      style={{ margin: \"4px\" }}\n      variant=\"contained\"\n      color={active ? \"primary\" : \"default\"}\n      onClick={(e) => {\n        setActive(!active);\n        if (onClick) {\n          onClick(e);\n        }\n      }}\n    >\n      {label}\n    </Button>\n  );\n};\n\nconst Filters = ({ filters, setFilters }) => {\n  const styles = useStyles();\n  const { data: states, isLoading: isLoadingStates } = useStates();\n  const { data: districts, isLoading: isLoadingDistricts } = useDistricts(\n    filters?.state?.state_id\n  );\n  const onFilterClick = (filter_type) => {\n    const idx = filters?.categories?.indexOf(filter_type);\n    const categories = [...filters.categories];\n\n    if (idx > -1) {\n      categories.splice(idx, 1);\n      setFilters({ ...filters, categories });\n    } else {\n      setFilters({ ...filters, categories: [...categories, filter_type] });\n    }\n  };\n\n  return (\n    <Grid className={styles.filterContainer} container xs={12}>\n      <Grid\n        className={styles.filterRow}\n        container\n        xs={12}\n        justify=\"flex-start\"\n        spacing={4}\n      >\n        <Grid item>\n          <TextField\n            id=\"date\"\n            label=\"Date\"\n            type=\"date\"\n            value={filters.date && formatDate(filters.date, \"yyyy-MM-dd\")}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              console.log(\"date value\", e);\n              setFilters({ ...filters, date: e.target.valueAsDate });\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <Autocomplete\n            id=\"states\"\n            disabled={isLoadingStates}\n            options={states}\n            getOptionLabel={(option) => option.state_name}\n            getOptionSelected={(option, value) =>\n              option.state_id === value.state_id\n            }\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"State\" variant=\"outlined\" />\n            )}\n            onChange={async (e, newValue) => {\n              setFilters({ ...filters, state: newValue });\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <Autocomplete\n            key={filters?.state?.state_id || 0}\n            id=\"district\"\n            disabled={isLoadingDistricts}\n            options={districts}\n            getOptionLabel={(option) => option.district_name}\n            getOptionSelected={(option, value) =>\n              option.district_id === value.district_id\n            }\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"District\" variant=\"outlined\" />\n            )}\n            onChange={(e, newValue) => {\n              setFilters({ ...filters, district: newValue });\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid className={styles.filterRow} container xs={12} justify=\"flex-end\">\n        <FilterButton label=\"18+\" onClick={() => onFilterClick(ABOVE_AGE_18)} />\n        <FilterButton label=\"45+\" onClick={() => onFilterClick(ABOVE_AGE_45)} />\n        <FilterButton\n          label=\"Available\"\n          onClick={() => onFilterClick(AVAILABLITY)}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Filters;\n","import { useSlotsByDistrict } from \"./queries/useSlotsByDistrict\";\nimport { useFilters } from \"./queries/useFilteredSlots\";\nimport Container from \"./components/container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport Filters from \"./components/filters\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      light: \"#6573c3\",\n      main: \"#3f51b5\",\n      dark: \"#2c387e\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#a2cf6e\",\n      main: \"#8bc34a\",\n      dark: \"#618833\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    padding: \"24px\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    width: \"90vw\",\n  },\n}));\n\nconst initialFilters = {\n  categories: [\"DATE\"],\n  state: {},\n  district: {},\n  date: new Date(),\n};\n\nfunction App() {\n  const [filters, setFilters] = useState(initialFilters);\n  const { data, isLoading } = useSlotsByDistrict(\n    filters?.district?.district_id,\n    filters.date\n  );\n  const filteredData = useFilters(data, filters);\n  const styles = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={styles.app}>\n        <div className={styles.container}>\n          <Filters filters={filters} setFilters={setFilters} />\n          {isLoading ? (\n            <div>loading ....</div>\n          ) : (\n            <Container data={filteredData} />\n          )}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}