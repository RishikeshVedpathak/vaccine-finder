{"version":3,"sources":["utils.js","queries/useSlotsByDistrict.js","queries/useFilteredSlots.js","components/tile.js","components/container.js","queries/useDistricts.js","queries/useStates.js","components/filters.js","App.js","reportWebVitals.js","index.js"],"names":["formatDate","date","frmt","format","getSlotByDistrictAPI","district_id","a","fetch","headers","response","json","filterByAge","center","age","sessions","filter","session","min_age_limit","length","ABOVE_AGE_18","ABOVE_AGE_45","AVAILABLITY","filterMap","data","available_capacity","filters","dateString","useStyles","makeStyles","theme","day","height","width","centerName","backgroundColor","lineHeight","borderRadius","whiteSpace","overflow","textOverflow","padding","badge","slotContainer","SlotList","List","slots","map","slot","idx","ListItem","button","SessionList","name","AvailablilityTag","onClick","reduce","list","findIndex","tag","push","Badge","badgeContent","color","Chip","label","e","Tile","useState","anchorEle","setAnchorEle","selectedCenter","setSelectedCenter","styles","ele","setEle","Paper","className","elevation","onMouseEnter","onMouseLeave","Tooltip","title","Grid","container","justify","Boolean","currentTarget","Popover","id","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","root","flexGrow","CenterList","item","spacing","NoCenter","Typography","align","Container","getDistrictAPI","state","getStatesAPI","filterContainer","filterRow","FilterButton","props","classes","active","setActive","Button","size","style","margin","variant","Filters","setFilters","useQuery","staleTime","Infinity","isLoading","isError","status","states","useStates","isLoadingStates","console","log","enabled","districts","useDistricts","state_id","isLoadingDistricts","onFilterClick","filter_type","categories","indexOf","splice","xs","TextField","type","value","InputLabelProps","shrink","onChange","target","valueAsDate","Autocomplete","disabled","options","getOptionLabel","option","state_name","getOptionSelected","renderInput","params","newValue","district_name","district","app","display","flexDirection","flexWrap","justifyContent","initialFilters","Date","App","refetchInterval","centers","useSlotsByDistrict","filteredData","filterFunctions","filterFun","filterCenters","category","useFilters","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.d1c3021c.chunk.js","sourcesContent":["import format from \"date-fns/format\";\n\nexport const formatDate = (date, frmt) => format(date, frmt);\n","import { useQuery, useQueryClient } from \"react-query\";\nimport { formatDate } from \"../utils\";\n\nconst slotByDistrictURL =\n  \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict\";\nconst getSlotByDistrictAPI = async (district_id, date) => {\n  const response = await fetch(\n    `${slotByDistrictURL}?district_id=${district_id}&date=${date}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  return response.json();\n};\n\nexport const useSlotsByDistrict = (district_id, date) => {\n  const dateString = formatDate(date, \"dd-MM-yyyy\");\n  const { data, isLoading, isError, status } = useQuery(\n    `slotsByDistrict-${district_id}-${dateString}`,\n    () => getSlotByDistrictAPI(district_id, dateString),\n    {\n      refetchInterval: 60000,\n      enabled: !!district_id && !!date,\n    }\n  );\n  const centers = data?.centers;\n\n  return {\n    data: centers,\n    isLoading,\n    isError,\n    status,\n  };\n};\n","import { formatDate } from \"./../utils\";\n\nconst filterCenters = (centers, filters, filterFunctions) => {\n  if (centers?.length > 0) {\n    return centers.filter((center) => {\n      const filterResults = filterFunctions.map((filterFun) =>\n        filterFun(center, filters)\n      );\n      return filterResults.indexOf(false) === -1;\n    });\n  }\n};\nconst filterByAge = (center, age) => {\n  return (\n    center?.sessions.filter((session) => session.min_age_limit <= age)?.length >\n    0\n  );\n};\nconst filterByAvailability = (center) => {\n  return (\n    center?.sessions.filter((session) => session?.available_capacity > 0)\n      .length > 0\n  );\n};\n\nconst filterByDate = (center, filters) => {\n  const dateString = formatDate(filters.date, \"dd-MM-yyyy\");\n  return (\n    center?.sessions.filter((session) => session.date === dateString).length > 0\n  );\n};\n\nexport const ABOVE_AGE_18 = \"ABOVE_AGE_18\";\nexport const ABOVE_AGE_45 = \"ABOVE_AGE_45\";\nexport const AVAILABLITY = \"AVAILABLITY\";\nexport const DATE = \"DATE\";\n\nconst filterMap = {\n  [ABOVE_AGE_18]: (data) => filterByAge(data, 18),\n  [ABOVE_AGE_45]: (data) => filterByAge(data, 45),\n  [AVAILABLITY]: filterByAvailability,\n  [DATE]: filterByDate,\n};\n\nexport const useFilters = (data, filters) => {\n  const { categories } = filters;\n  const filterFunctions = categories.map((category) => {\n    return filterMap[category];\n  });\n  return filterCenters(data, filters, filterFunctions);\n};\n","import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/tooltip\";\nimport Badge from \"@material-ui/core/badge\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  day: {\n    height: 80,\n    width: 140,\n  },\n  centerName: {\n    backgroundColor: \"bisque\",\n    lineHeight: \"1.5em\",\n    borderRadius: \"4px\",\n    width: \"100%\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"2px\",\n  },\n  badge: {\n    padding: \"8px\",\n  },\n  slotContainer: {\n    padding: \"4px\",\n  },\n}));\n\nconst SlotList = ({ session }) => {\n  return (\n    <List>\n      {session?.slots.map((slot, idx) => (\n        <ListItem key={idx} button>\n          {slot}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst SessionList = ({ center }) => {\n  return (\n    <List>\n      {center?.sessions.map((session, idx) => (\n        <ListItem key={`${center.name}-${idx}`} button>\n          {`Session ${idx + 1} - `}\n          <SlotList session={session} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst AvailablilityTag = ({ center, onClick }) => {\n  const availabilityByAge = center.sessions.reduce((list, session) => {\n    const idx = list.findIndex(\n      (tag) => tag.min_age_limit === session.min_age_limit\n    );\n    if (idx === -1) {\n      list.push({\n        min_age_limit: session.min_age_limit,\n        available_capacity: session.available_capacity,\n      });\n    } else {\n      list[idx].available_capacity += session.available_capacity;\n    }\n    return list;\n  }, []);\n  return availabilityByAge.map((age) => (\n    <Badge badgeContent={age.available_capacity || \"0\"} color=\"primary\">\n      <Chip\n        label={`> ${age.min_age_limit}`}\n        color=\"default\"\n        onClick={(e) => onClick(e, center)}\n      />\n    </Badge>\n  ));\n};\n\nconst Tile = ({ center }) => {\n  const [anchorEle, setAnchorEle] = useState(false);\n  const [selectedCenter, setSelectedCenter] = useState();\n  const styles = useStyles();\n  const [ele, setEle] = useState(1);\n\n  return (\n    <Paper\n      className={styles.day}\n      elevation={ele}\n      onMouseEnter={() => setEle(4)}\n      onMouseLeave={() => setEle(1)}\n    >\n      <Tooltip title={center.name}>\n        <div className={styles.centerName}>{center.name}</div>\n      </Tooltip>\n      <Grid container justify=\"center\" className={styles.badge}>\n        <AvailablilityTag\n          center={center}\n          onClick={(e, center) => {\n            setSelectedCenter(center);\n            Boolean(anchorEle)\n              ? setAnchorEle(null)\n              : setAnchorEle(e.currentTarget);\n          }}\n        />\n        <Popover\n          id=\"mouse-over-popover\"\n          open={Boolean(anchorEle)}\n          anchorEl={anchorEle}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={() => setAnchorEle(null)}\n          disableRestoreFocus\n        >\n          <Grid container justify=\"center\" className={styles.slotContainer}>\n            <SessionList center={selectedCenter} />\n          </Grid>\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Tile;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/typography\";\nimport Tile from \"./tile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 16,\n  },\n  day: {\n    height: 80,\n    width: 140,\n  },\n}));\n\nconst CenterList = ({ data }) =>\n  data?.map((center, idx) => (\n    <Grid key={idx} item spacing={2}>\n      <Tile center={center} />\n    </Grid>\n  ));\n\nconst NoCenter = () => (\n  <Typography align=\"center\">No Centers to show</Typography>\n);\n\nconst Container = ({ data }) => {\n  const styles = useStyles();\n  return (\n    <Paper className={styles.root} elevation={2}>\n      <Grid container spacing={2} justify=\"center\">\n        {data?.length ? <CenterList data={data} /> : <NoCenter />}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Container;\n","import { useQuery } from \"react-query\";\n\nconst districtURL = \"https://cdn-api.co-vin.in/api/v2/admin/location/districts\";\nconst getDistrictAPI = async (state) => {\n  const response = await fetch(`${districtURL}/${state}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return response.json();\n};\n\nexport const useDistricts = (state) => {\n  console.log(\"useDistricts\", state);\n  const { data, isLoading, isError, status } = useQuery(\n    `districts-${state}`,\n    () => getDistrictAPI(state),\n    {\n      staleTime: Infinity,\n      enabled: !!state,\n    }\n  );\n  const districts = data?.districts || [];\n\n  return {\n    data: districts,\n    isLoading,\n    isError,\n    status,\n  };\n};\n","import { useQuery } from \"react-query\";\n\nconst stateURL = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\nconst getStatesAPI = async () => {\n  const response = await fetch(`${stateURL}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return response.json();\n};\n\nexport const useStates = () => {\n  const { data, isLoading, isError, status } = useQuery(\n    \"states\",\n    () => getStatesAPI(),\n    {\n      staleTime: Infinity,\n    }\n  );\n  const states = data?.states || [];\n\n  return {\n    data: states,\n    isLoading,\n    isError,\n    status,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport {\n  ABOVE_AGE_18,\n  ABOVE_AGE_45,\n  AVAILABLITY,\n} from \"../queries/useFilteredSlots\";\nimport { useDistricts } from \"../queries/useDistricts\";\nimport { useStates } from \"../queries/useStates\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/autocomplete\";\nimport { formatDate } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  filterContainer: {\n    padding: \"8px 0 8px 0\",\n  },\n  filterRow: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst FilterButton = ({ label, onClick, classes, className, ...props }) => {\n  const [active, setActive] = useState(false);\n  return (\n    <Button\n      {...props}\n      size=\"small\"\n      style={{ margin: \"4px\" }}\n      variant=\"contained\"\n      color={active ? \"primary\" : \"default\"}\n      onClick={(e) => {\n        setActive(!active);\n        if (onClick) {\n          onClick(e);\n        }\n      }}\n    >\n      {label}\n    </Button>\n  );\n};\n\nconst Filters = ({ filters, setFilters }) => {\n  const styles = useStyles();\n  const { data: states, isLoading: isLoadingStates } = useStates();\n  const { data: districts, isLoading: isLoadingDistricts } = useDistricts(\n    filters?.state?.state_id\n  );\n  const onFilterClick = (filter_type) => {\n    const idx = filters?.categories?.indexOf(filter_type);\n    const categories = [...filters.categories];\n\n    if (idx > -1) {\n      categories.splice(idx, 1);\n      setFilters({ ...filters, categories });\n    } else {\n      setFilters({ ...filters, categories: [...categories, filter_type] });\n    }\n  };\n\n  return (\n    <Grid className={styles.filterContainer} container xs={12}>\n      <Grid\n        className={styles.filterRow}\n        container\n        xs={12}\n        justify=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item>\n          <TextField\n            id=\"date\"\n            label=\"Date\"\n            type=\"date\"\n            value={filters.date && formatDate(filters.date, \"yyyy-MM-dd\")}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              console.log(\"date value\", e);\n              setFilters({ ...filters, date: e.target.valueAsDate });\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <Autocomplete\n            id=\"states\"\n            disabled={isLoadingStates}\n            options={states}\n            getOptionLabel={(option) => option.state_name}\n            getOptionSelected={(option, value) =>\n              option.state_id === value.state_id\n            }\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"State\" variant=\"outlined\" />\n            )}\n            onChange={async (e, newValue) => {\n              setFilters({ ...filters, state: newValue });\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <Autocomplete\n            key={filters?.state?.state_id || 0}\n            id=\"district\"\n            disabled={isLoadingDistricts}\n            options={districts}\n            getOptionLabel={(option) => option.district_name}\n            getOptionSelected={(option, value) =>\n              option.district_id === value.district_id\n            }\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"District\" variant=\"outlined\" />\n            )}\n            onChange={(e, newValue) => {\n              setFilters({ ...filters, district: newValue });\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid className={styles.filterRow} container xs={12} justify=\"flex-end\">\n        <FilterButton label=\"18+\" onClick={() => onFilterClick(ABOVE_AGE_18)} />\n        <FilterButton label=\"45+\" onClick={() => onFilterClick(ABOVE_AGE_45)} />\n        <FilterButton\n          label=\"Available\"\n          onClick={() => onFilterClick(AVAILABLITY)}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Filters;\n","import { useSlotsByDistrict } from \"./queries/useSlotsByDistrict\";\nimport { useFilters } from \"./queries/useFilteredSlots\";\nimport Container from \"./components/container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport Filters from \"./components/filters\";\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    padding: \"24px\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    width: \"90vw\",\n  },\n}));\n\nconst initialFilters = {\n  categories: [\"DATE\"],\n  state: {},\n  district: {},\n  date: new Date(),\n};\n\nfunction App() {\n  const [filters, setFilters] = useState(initialFilters);\n  const { data, isLoading } = useSlotsByDistrict(\n    filters?.district?.district_id,\n    filters.date\n  );\n  const filteredData = useFilters(data, filters);\n  const styles = useStyles();\n  return (\n    <div className={styles.app}>\n      <div className={styles.container}>\n        <Filters filters={filters} setFilters={setFilters} />\n        {isLoading ? (\n          <div>loading ....</div>\n        ) : (\n          <Container data={filteredData} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}